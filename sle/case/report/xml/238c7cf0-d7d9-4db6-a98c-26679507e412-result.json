{"name": "test_sql_purchase_order", "status": "broken", "statusDetails": {"message": "IndexError: pop from empty list", "trace": "def test_sql_purchase_order():\n    \n        Sql = DB.DB()\n        find_purchase_order = [\"*\", \"`bill_purchase_order` order by gmt_create desc LIMIT 1;\"]\n        results = Sql.find(find_purchase_order)\n        #实例化封装好的数据库操作，从结果中取数据和最开始的列表进行对比\n        for r in results:\n            try:\n>               assert r[1] == l[-1]\nE               IndexError: list index out of range\n\ntest_new_purchase_order.py:56: IndexError\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_sql_purchase_order():\n    \n        Sql = DB.DB()\n        find_purchase_order = [\"*\", \"`bill_purchase_order` order by gmt_create desc LIMIT 1;\"]\n        results = Sql.find(find_purchase_order)\n        #实例化封装好的数据库操作，从结果中取数据和最开始的列表进行对比\n        for r in results:\n            try:\n                assert r[1] == l[-1]\n                print(\"新建的采购单号：\"+l.pop(),\"数据库单号:\"+r[1])\n            except:\n>               print(\"采购单不匹配\"+\"/n\",l.pop(), r[1])\nE               IndexError: pop from empty list\n\ntest_new_purchase_order.py:59: IndexError"}, "start": 1563166854478, "stop": 1563166854485, "uuid": "daa81322-a3d1-493a-bbb9-9fe13da35fc7", "historyId": "88ad8abdf6938b0e44da56b46831e6cc", "fullName": "test_new_purchase_order#test_sql_purchase_order", "labels": [{"name": "suite", "value": "test_new_purchase_order"}, {"name": "host", "value": "DESKTOP-3VAAAHR"}, {"name": "thread", "value": "7652-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_new_purchase_order"}]}